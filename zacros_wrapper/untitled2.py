# -*- coding: utf-8 -*-
"""
Created on Sat Jan 20 14:05:14 2018

@author: gerha
"""

from rdkit import Chem
from rdkit.Chem import Draw

smiles = ['C(C[Pt])[Pt]', 'C(C[Pt])([Pt])C', 'C(C[Pt])([Pt])[Pt]', 'C(C[Pt])([Pt])([Pt])C', 'C(C([Pt])[Pt])([Pt])C', 'C(C[Pt])(C[Pt])[Pt]', 'C(C[Pt])([Pt])([Pt])[Pt]', 'C(C([Pt])[Pt])([Pt])[Pt]', 'C(C[Pt])([Pt])O', 'C(O[Pt])(C[Pt])[Pt]', 'C(C([Pt])[Pt])([Pt])([Pt])C', 'C(C[Pt])(C[Pt])([Pt])[Pt]', 'C(C([Pt])C)([Pt])([Pt])[Pt]', 'C(C(C[Pt])[Pt])([Pt])[Pt]', 'C(C([Pt])O)([Pt])C', 'C(C(O[Pt])[Pt])([Pt])C', 'C(CO)(C[Pt])[Pt]', 'C(CO[Pt])(C[Pt])[Pt]', 'C(C([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C[Pt])([Pt])([Pt])O', 'C(O[Pt])(C[Pt])([Pt])[Pt]', 'C(C([Pt])[Pt])([Pt])O', 'C(C(O[Pt])[Pt])([Pt])[Pt]', 'C(C([Pt])([Pt])[Pt])([Pt])([Pt])C', 'C(C([Pt])[Pt])(C[Pt])([Pt])[Pt]', 'C(C([Pt])O)([Pt])([Pt])C', 'C(C(O[Pt])[Pt])([Pt])([Pt])C', 'C(CO)(C[Pt])([Pt])[Pt]', 'C(C[Pt])(CO[Pt])([Pt])[Pt]', 'C(C(C[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C([Pt])C)([Pt])([Pt])O', 'C(C([Pt])C)(O[Pt])([Pt])[Pt]', 'C(C(C([Pt])[Pt])[Pt])([Pt])[Pt]', 'C(C(CO)[Pt])([Pt])[Pt]', 'C(C(C[Pt])[Pt])([Pt])O', 'C(C(CO[Pt])[Pt])([Pt])[Pt]', 'C(C(O[Pt])[Pt])(C[Pt])[Pt]', 'C(C([Pt])([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C([Pt])O)([Pt])([Pt])[Pt]', 'C(C([Pt])[Pt])([Pt])([Pt])O', 'C(C(O[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C([Pt])[Pt])(O[Pt])([Pt])[Pt]', 'C(C(C[Pt])([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C([Pt])([Pt])O)([Pt])([Pt])C', 'C(C(O[Pt])([Pt])[Pt])([Pt])([Pt])C', 'C(C([Pt])[Pt])(C([Pt])[Pt])([Pt])[Pt]', 'C(C([Pt])O)(C[Pt])([Pt])[Pt]', 'C(C([Pt])[Pt])(CO)([Pt])[Pt]', 'C(C(O[Pt])[Pt])(C[Pt])([Pt])[Pt]', 'C(C([Pt])[Pt])(CO[Pt])([Pt])[Pt]', 'C(C(C([Pt])[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(CO)[Pt])([Pt])([Pt])[Pt]', 'C(C(C[Pt])[Pt])([Pt])([Pt])O', 'C(C(CO[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(C[Pt])[Pt])(O[Pt])([Pt])[Pt]', 'C(C(C([Pt])[Pt])[Pt])([Pt])O', 'C(C(C(O[Pt])[Pt])[Pt])([Pt])[Pt]', 'C(C([Pt])([Pt])[Pt])([Pt])([Pt])O', 'C(C([Pt])([Pt])[Pt])(O[Pt])([Pt])[Pt]', 'C(C(C([Pt])[Pt])([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(CO)([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(C[Pt])([Pt])[Pt])([Pt])([Pt])O', 'C(C(CO[Pt])([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(O[Pt])([Pt])[Pt])(C[Pt])([Pt])[Pt]', 'C(C([Pt])O)(C([Pt])[Pt])([Pt])[Pt]', 'C(C([Pt])[Pt])(C(O[Pt])[Pt])([Pt])[Pt]', 'C(C(C([Pt])([Pt])[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(C([Pt])O)[Pt])([Pt])([Pt])[Pt]', 'C(C(C([Pt])[Pt])[Pt])([Pt])([Pt])O', 'C(C(C(O[Pt])[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(C([Pt])[Pt])[Pt])(O[Pt])([Pt])[Pt]', 'C(C(C([Pt])([Pt])[Pt])([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(C([Pt])O)([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(C([Pt])[Pt])([Pt])[Pt])([Pt])([Pt])O', 'C(C(C(O[Pt])[Pt])([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(O[Pt])([Pt])[Pt])(C([Pt])[Pt])([Pt])[Pt]', 'C(C(C([Pt])([Pt])[Pt])[Pt])([Pt])([Pt])O', 'C(C(C(O[Pt])([Pt])[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(C([Pt])([Pt])[Pt])([Pt])[Pt])([Pt])([Pt])O', 'C(C(C(O[Pt])([Pt])[Pt])([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(=C)(C[Pt])[Pt]', 'C(=O)(C[Pt])[Pt]', 'C(=C[Pt])(C[Pt])[Pt]', 'C(=C)(C([Pt])[Pt])[Pt]', 'C(=O)(C([Pt])C)[Pt]', 'C(C=O)(C[Pt])[Pt]', 'C(=O)(C([Pt])[Pt])[Pt]', 'C(C(=C)[Pt])([Pt])([Pt])[Pt]', 'C(=C([Pt])[Pt])(C[Pt])[Pt]', 'C(C(=O)[Pt])([Pt])([Pt])C', 'C(=C[Pt])(C([Pt])[Pt])[Pt]', 'C(=CO)(C[Pt])[Pt]', 'C(=C)(C([Pt])O)[Pt]', 'C(=CO[Pt])(C[Pt])[Pt]', 'C(=C)(C(O[Pt])[Pt])[Pt]', 'C(C=O)(C[Pt])([Pt])[Pt]', 'C(=O)(C(C[Pt])[Pt])[Pt]', 'C(C(C=O)[Pt])([Pt])[Pt]', 'C(C(=O)[Pt])([Pt])([Pt])[Pt]', 'C(C(=C[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(=C(C([Pt])[Pt])[Pt])([Pt])[Pt]', 'C(C(=C)[Pt])([Pt])([Pt])O', 'C(=C(C[Pt])[Pt])([Pt])O', 'C(=C(O[Pt])[Pt])(C[Pt])[Pt]', 'C(=C)(C(O[Pt])([Pt])[Pt])[Pt]', 'C(=O)(C(C[Pt])([Pt])[Pt])[Pt]', 'C(=CO)(C([Pt])[Pt])[Pt]', 'C(=C[Pt])(C([Pt])O)[Pt]', 'C(=C[Pt])(C(O[Pt])[Pt])[Pt]', 'C(=CO[Pt])(C([Pt])[Pt])[Pt]', 'C(C([Pt])[Pt])(C=O)([Pt])[Pt]', 'C(C(C=O)[Pt])([Pt])([Pt])[Pt]', 'C(=O)(C(C([Pt])[Pt])[Pt])[Pt]', 'C(C(=C([Pt])[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(=CO)[Pt])([Pt])([Pt])[Pt]', 'C(=C([Pt])[Pt])(C([Pt])O)[Pt]', 'C(C(=C[Pt])[Pt])([Pt])([Pt])O', 'C(=C(C([Pt])[Pt])[Pt])([Pt])O', 'C(C(=CO[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(=C(C(O[Pt])[Pt])[Pt])([Pt])[Pt]', 'C(C(C=O)([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(=C(O[Pt])[Pt])(C([Pt])[Pt])[Pt]', 'C(C(=C[Pt])[Pt])(O[Pt])([Pt])[Pt]', 'C(=O)(C(C([Pt])[Pt])([Pt])[Pt])[Pt]', 'C(C(C(=O)[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(=C(C([Pt])([Pt])O)[Pt])([Pt])[Pt]', 'C(=C(C([Pt])([Pt])[Pt])[Pt])([Pt])O', 'C(C(=C(O[Pt])[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(C(=C([Pt])[Pt])[Pt])(O[Pt])([Pt])[Pt]', 'C(C(C(=O)[Pt])([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(=C=O)(C[Pt])[Pt]', 'C(=C)(C(=O)[Pt])[Pt]', 'C(=C=O)(C([Pt])[Pt])[Pt]', 'C(=O)(C(=C[Pt])[Pt])[Pt]', 'C(C(=C=O)[Pt])([Pt])([Pt])[Pt]', 'C(=O)(C(=C([Pt])[Pt])[Pt])[Pt]', 'C(=C[Pt])[Pt]', 'C(=C[Pt])([Pt])C', 'C(=C[Pt])([Pt])[Pt]', 'C(=C([Pt])[Pt])([Pt])C', 'C(=C([Pt])[Pt])([Pt])[Pt]', 'C(=C[Pt])([Pt])O', 'C(=C[Pt])(O[Pt])[Pt]', 'C(=C([Pt])O)([Pt])C', 'C(=C(O[Pt])[Pt])([Pt])C', 'C(=C[Pt])(CO)[Pt]', 'C(=C[Pt])(CO[Pt])[Pt]', 'C(=C([Pt])[Pt])([Pt])O', 'C(=C([Pt])[Pt])(O[Pt])[Pt]', 'C(=C([Pt])[Pt])(CO)[Pt]', 'C(=C([Pt])[Pt])(CO[Pt])[Pt]', 'C(=C[Pt])(C=O)[Pt]', 'C(=C([Pt])[Pt])(C=O)[Pt]', 'O(C[Pt])[Pt]', 'C(O[Pt])([Pt])C', 'C(CC)(O[Pt])[Pt]', 'C(O[Pt])([Pt])[Pt]', 'C(O[Pt])([Pt])([Pt])C', 'C(CC)(O[Pt])([Pt])[Pt]', 'C(CC[Pt])(O[Pt])[Pt]', 'C(O[Pt])([Pt])([Pt])[Pt]', 'C(O[Pt])(CC[Pt])([Pt])[Pt]', 'C(CC(O[Pt])[Pt])([Pt])[Pt]', 'C(CC(O[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(O[Pt])(CC([Pt])[Pt])([Pt])[Pt]', 'C(CC(O[Pt])([Pt])[Pt])([Pt])([Pt])[Pt]', 'C(=C)(O[Pt])[Pt]', 'C(=CC)(O[Pt])[Pt]', 'C(=C)C(O[Pt])[Pt]', 'C(C=C)(O[Pt])([Pt])[Pt]', 'C(=CC[Pt])(O[Pt])[Pt]', 'C(=C[Pt])C(O[Pt])[Pt]', 'C(=CC(O[Pt])[Pt])([Pt])[Pt]', 'C(C=C[Pt])(O[Pt])([Pt])[Pt]', 'C(=CC([Pt])[Pt])(O[Pt])[Pt]', 'C(C=C(O[Pt])[Pt])([Pt])([Pt])[Pt]', 'C(O[Pt])(C=C([Pt])[Pt])([Pt])[Pt]', 'C(=C)=C(O[Pt])[Pt]', 'C(#C)C(O[Pt])[Pt]', 'C(#C[Pt])C(O[Pt])[Pt]', 'C(=C[Pt])=C(O[Pt])[Pt]', 'C(C#C)(O[Pt])([Pt])[Pt]', 'C(=C=C(O[Pt])[Pt])([Pt])[Pt]', 'C(C#C[Pt])(O[Pt])([Pt])[Pt]', 'C=C', 'C(=C)C', 'C(=C)[Pt]', 'C(=C)([Pt])C', 'C(=C[Pt])C', 'C(=C)C[Pt]', 'C(=C)([Pt])[Pt]', 'C(=C)O', 'C(=C)O[Pt]', 'C(=CC)([Pt])[Pt]', 'C(C=C)([Pt])[Pt]', 'C(=C[Pt])C[Pt]', 'C(=CO)C', 'C(=CO[Pt])C', 'C(=C)CO', 'C(=C)CO[Pt]', 'C(=C)([Pt])O', 'C(=C[Pt])O', 'C(=C[Pt])O[Pt]', 'C(=CO)([Pt])C', 'C(=CO[Pt])([Pt])C', 'C(=C)(CO)[Pt]', 'C(=C)(CO[Pt])[Pt]', 'C(C=C)([Pt])([Pt])[Pt]', 'C(=CC[Pt])([Pt])[Pt]', 'C(=CC)([Pt])O', 'C(C=C[Pt])([Pt])[Pt]', 'C(=C[Pt])CO', 'C(=C)C([Pt])O', 'C(=CO)C[Pt]', 'C(=C[Pt])CO[Pt]', 'C(=CO[Pt])C[Pt]', 'C(=CO)([Pt])[Pt]', 'C(=CO[Pt])([Pt])[Pt]', 'C(C=C[Pt])([Pt])([Pt])[Pt]', 'C(=CC([Pt])[Pt])([Pt])[Pt]', 'C(=CCO)([Pt])[Pt]', 'C(C=C)([Pt])([Pt])O', 'C(=CC[Pt])([Pt])O', 'C(=CCO[Pt])([Pt])[Pt]', 'C(=C[Pt])C([Pt])O', 'C(C=CO)([Pt])[Pt]', 'C(C=CO[Pt])([Pt])[Pt]', 'C(=CC([Pt])([Pt])[Pt])([Pt])[Pt]', 'C(C=CO)([Pt])([Pt])[Pt]', 'C(=CC([Pt])O)([Pt])[Pt]', 'C(C=C[Pt])([Pt])([Pt])O', 'C(=CC([Pt])[Pt])([Pt])O', 'C(C=CO[Pt])([Pt])([Pt])[Pt]', 'C(C=C([Pt])[Pt])([Pt])([Pt])O', 'C(C=C([Pt])O)([Pt])([Pt])[Pt]', 'C(=C)=C', 'C(=C)=O', 'C(=C)=C[Pt]', 'C(=C=O)C', 'C(=C)C=O', 'C(=O)=C[Pt]', 'C(=C=C)([Pt])[Pt]', 'C(=C=O)([Pt])C', 'C(=C[Pt])=C[Pt]', 'C(=C)=CO', 'C(=C)=CO[Pt]', 'C(=C)(C=O)[Pt]', 'C(=C)C(=O)[Pt]', 'C(=O)=CC[Pt]', 'C(=C[Pt])C=O', 'C(=C=O)([Pt])[Pt]', 'C(=C=C[Pt])([Pt])[Pt]', 'C(=C)=C([Pt])O', 'C(=C[Pt])=CO', 'C(=C[Pt])=CO[Pt]', 'C(=CC=O)([Pt])[Pt]', 'C(=C[Pt])C(=O)[Pt]', 'C(=O)=CC([Pt])[Pt]', 'C(=C=C([Pt])[Pt])([Pt])[Pt]', 'C(=C=CO)([Pt])[Pt]', 'C(=C[Pt])=C([Pt])O', 'C(=C=CO[Pt])([Pt])[Pt]', 'C(C=C=O)([Pt])([Pt])[Pt]', 'C(=O)(C=C([Pt])[Pt])[Pt]', 'C(=C=C([Pt])[Pt])([Pt])O', 'C(=C)=C=O', 'C(=C[Pt])=C=O', 'C(=C=C=O)([Pt])[Pt]', 'C#C', 'C(#C)C', 'C(#C)[Pt]', 'C(#C[Pt])C', 'C(#C)C[Pt]', 'C(#C[Pt])[Pt]', 'C(#C)O', 'C(#C)O[Pt]', 'C(#C[Pt])C[Pt]', 'C(#CO)C', 'C(#CO[Pt])C', 'C(C#C)([Pt])[Pt]', 'C(#C)CO', 'C(#C)CO[Pt]', 'C(#C[Pt])O', 'C(#C[Pt])O[Pt]', 'C(C#C)([Pt])([Pt])[Pt]', 'C(#CC([Pt])[Pt])[Pt]', 'C(#C[Pt])CO', 'C(#CO)C[Pt]', 'C(#C[Pt])CO[Pt]', 'C(#CO[Pt])C[Pt]', 'C(#C)C([Pt])O', 'C(C#C[Pt])([Pt])([Pt])[Pt]', 'C(#C[Pt])C([Pt])O', 'C(C#C)([Pt])([Pt])O', 'C(#CC([Pt])[Pt])O', 'C(C#CO[Pt])([Pt])[Pt]', 'C(C#C[Pt])([Pt])([Pt])O', 'C(C#CO)([Pt])([Pt])[Pt]', 'C(C#CO[Pt])([Pt])([Pt])[Pt]', 'C(#C)C=O', 'C(#C[Pt])C=O', 'C(#C)C(=O)[Pt]', 'C(#C[Pt])C(=O)[Pt]', 'O=C', 'C(=O)C', 'C(C=O)C', 'O=C[Pt]', 'C(=O)([Pt])C', 'C(=O)C[Pt]', 'C(C=O)([Pt])C', 'C(=O)(CC)[Pt]', 'C(=O)CC[Pt]', 'C(=O)([Pt])[Pt]', 'C(C=O)([Pt])[Pt]', 'C(C=O)([Pt])([Pt])C', 'C(=O)(CC[Pt])[Pt]', 'C(=O)CC([Pt])[Pt]', 'C(C=O)([Pt])([Pt])[Pt]', 'C(CC=O)([Pt])([Pt])[Pt]', 'C(=O)(CC([Pt])[Pt])[Pt]', 'C(CC(=O)[Pt])([Pt])([Pt])[Pt]']
smiless = smiles
for smiles in smiless:
    mol2 = Chem.MolFromSmiles(smiles)
    mol = Chem.RWMol(mol2)
    Ccnt = 0
    for i in reversed(range(0, mol.GetNumAtoms())):
        if mol.GetAtomWithIdx(i).GetSymbol() == 'Pt':
            mol.RemoveAtom(i)
        else:
            if mol.GetAtomWithIdx(i).GetSymbol() == 'C':
                Ccnt += 1
            atom = mol.GetAtomWithIdx(i)

            s = atom.GetSymbol()
            nH = atom.GetTotalNumHs()
            if nH > 0:
                s += 'H'
            if nH > 1:
                s += str(nH)
            # Here is a magic property you can set that will change how an atom is printed in smiles
            atom.SetProp('smilesSymbol', s)
    if Ccnt >= 0:
        print(smiles + '\t' + Chem.MolToSmiles(mol))
